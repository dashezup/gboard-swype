##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
#if ($schema.getNamespace())
package $schema.getNamespace();
#end
@SuppressWarnings("all")
#if ($schema.getDoc())
/** $schema.getDoc() */
#end
public class ${this.mangle($schema.getName())} implements
  org.apache.avro.generic.GenericFixed,
  android.os.Parcelable {

  private static org.apache.avro.Schema schema = null;

  public final byte[] bytes;

  /**
   * Creates a new ${this.mangle($schema.getName())} with the given bytes.
   * @param bytes The bytes to create the new ${this.mangle($schema.getName())}.
   */
  public ${this.mangle($schema.getName())}(byte[] bytes) {
    this.bytes = bytes;
  }

  /**
   * Creates a new ${this.mangle($schema.getName())} for use in tests
   */
  public ${this.mangle($schema.getName())}() {
    this.bytes = new byte[0];
  }

  /**
   * Gets the schema for this enum - this can be slow to parse so don't do it
   * on the UI thread
   */
  @Override
  public org.apache.avro.Schema getSchema() {
    if (schema == null) {
      // not worrying about synchronization - having two instances isn't a problem
      schema = new org.apache.avro.Schema.Parser().parse(${this.javaSplit($schema.toString())});
    }
    return schema;
  }

  @Override
  public byte[] bytes() {
      return bytes;
  }

  @Override
  public boolean equals(final Object obj) {
    if (this == obj) {
      return true;
    }
    if ((obj == null) || !(obj instanceof org.apache.avro.generic.GenericFixed)) {
      return false;
    }
    final org.apache.avro.generic.GenericFixed fixed = (org.apache.avro.generic.GenericFixed) obj;
    return java.util.Arrays.equals(fixed.bytes(), bytes);
  }

  @Override
  public int hashCode() {
    return java.util.Arrays.hashCode(bytes);
  }

  public String toString() {
    return java.util.Arrays.toString(bytes);
  }

  public int describeContents() {
    return 0;
  }

  public void writeToParcel(android.os.Parcel out, int flags) {
    out.writeValue(this.bytes);
  }

  public static final android.os.Parcelable.Creator<${this.mangle($schema.getName())}> CREATOR
       = new android.os.Parcelable.Creator<${this.mangle($schema.getName())}>() {

    public ${this.mangle($schema.getName())} createFromParcel(android.os.Parcel in) {
       return new ${this.mangle($schema.getName())}(in);
    }

    public ${this.mangle($schema.getName())}[] newArray(int size) {
       return new ${this.mangle($schema.getName())}[size];
    }
  };

  private ${this.mangle($schema.getName())}(android.os.Parcel in) {
    this(
      (byte[]) in.readValue(${this.mangle($schema.getName())}.class.getClassLoader())
    );
  }
}
